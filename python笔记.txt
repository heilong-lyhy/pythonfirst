一、部分短指令效果以及小知识
1、print("") #在屏幕上打印出引号内的内容
2、X = Y #赋值X为Y
3、input() #目前来看是个输入框，N = int(input( )) #键盘输入N的值
4、class = ['1','2',...] #赋值给一个数组（python里叫列表）
5、a = "abc" #a是字符串，b =[1,2,3] #b是列表
c = （1,2,'abc') #c是元组，d ={'a':1,'b':2,'c':3} #d是字典（'key':value)
6、+=运算符，意为在原本基础上进行加法，最终保留值
7、def name( , ) #定义一个名为name的函数



二、循环
1、for循环
基本语法：
for 变量 in 可迭代对象:
  循环体语句组
[else:
  语句组]
2、跳转语句
break：当break被执行，循环被终止
continue：当continue被执行，跳过本次循环

range(a,b)  #循环a到b-1次
集合 #将会遍历集合中的每个元素
3、while循环
基本语法：（中括号内内容可以省略，括号不用输入！）
while 条件:
  循环语句组
[else:
  语句组]

1、例子
for i in range(0,10):  #i为本循环的变量，范围为0-9
    print("i=%d"%(i))  #在屏幕上打印的i的数值（%和d为例子，模仿使用）

三、集合（set）
可迭代，无序
用来保存不重复的元素（会默认讲重复的元素合并）
1、创建集合:
a = set( ) #创建一个空的集合
b = {1,2,"abc"} #创建一个有初始值的集合
!注意!当字典被转换成为集合时，只会保留key值，value会被忽略
2、修改集合：
假设有集合 nums ={1,2,3}
nums.add(6) #向集合nums中添加6
nums.remove (1) #从集合nums中去除1
nums.clear() #清除集合nums
3、集合的运算
交集：取两个集合公共元素 &/intersection
并集：取两集合的全部元素 |/union
差集：取一个集合中另一个集合没有的元素 -/difference
 写法举例：print(a&b)  print(a.intersection(b))  ...

四、字典 
可迭代，可变
1、创建字典
name = dict( ) #创建一个空字典
字典格式： key:value  （key如果是字符串必须加引号）
2、修改字典
name[key] = value #向字典添加键值对（也可以用于替换）
name.pop(key) #在字典name中移除key和相应的值
3、访问字典视图
items() #返回字典的所有键值对视图
keys() #返回字典键视图
values() #返回字典值视图
可以用于更改为列表如：
list(name.items())

五、类型（只记重点）
1、布尔类型（true or false）
v1 = true
v2 = false
print(v1)  #true
print(int(v1))  #1
print(v1+v2)  #1

六、运算符
1、比较（关系）运算符
类型： >   <   >=   <=   ==   !=
2、算术运算符 
+（加） -（减） *（乘） /（除） %（取余） **（次幂） //（地板除法：小于a与b的商的最大整数）
例：3/2=1.5（float） 3//2=1（int）
3、逻辑运算符
3.1、 not 逻辑非 not a（a为T时值为F，反一样）
3.2、 and 逻辑与 a and b （当a b均为T时 结果为T，否则为F）
3.3、 or 逻辑或 a or b （当a b均为F时 结果为F，否则为T）
!:在a为T时 若b为函数，不会被调用
4、位运算符（适用于2进制  
~（取反：将x的值取反 公式：~a = （a+1）x -1）
&（位与：均为二进制的情况下，结果都为1，则为1，否则为0）
|（位或：应该不用讲了）^（位异或：只有一个1和0时结果为1，2个均为1或0结果为0）
>>（右移：x>>a 将x右移a位，高位采用符号补位 正数用00..补位 负数用10..补位）
<<（左移：x<<a 将x左移a位，低位采用0补位） 
5、赋值运算符
(懂得都懂，举例： a += b 和 a = a+b 是一样的）
+= -= *= /= %= **= //= &= |= ^= <<= >>=
6、优先级
1（）
2 **
3 ~
4 +，-（正负）
5 *，/，%，//
6 +，-（加减）
7<<,>>
8 &
9 ^
10 |
11 所有比较类的
12 not（逻辑非）
13 and or

七、函数
部分机制可参考js
1、递归：
示例(搜索系统目录）：
贴个链接（“详情参考lesson2”）
2、定义函数
def 函数名(参数列表):
  函数体
  return
3、函数参数默认值
下方代码中kafuu chino是参数函数的默认值
在不提供参数值的情况下，会自动调用默认值
def coffee(name='kafuu chino')
4、可变参数
在参数前加一个*，代表这个参数会被当成一个元组使用
在这个参数里可有多个数据
如函数sum(*numbers)
print(sum(100.0,20.0,30.0))
在参数前加两个*，代表这个参数会被当做一个字典
在调用时前面输入的名称，如下方的name和age，是自定义的key
如函数show(**info)
show(name='T',age='12')
5、函数内变量
在函数内提升变量x为全局变量
global x
x=10
6、函数类型
一个函数可以作为另一个函数的返回值（return后跟函数名）
一个函数可以作为另一个函数的参数
7、过滤函数filter()
filter(function,iterable)
function为提供过滤规则的函数 iterable为可迭代对象
8、映射函数map()
map(function,iterable)
对某个可迭代对象中的元素进行处理后输出（例如乘2）
9、lambda函数
可用于定义匿名函数（一次性的函数）
lambda 参数列表:lambda函数体


八、导入模块（文件）
import <模块名>
from <模块名> import <代码元素>
from <模块名> import <代码元素> as <代码元素别名>

九、数据类型
1、整数类型（int）
二进制表示方法 0B 数字零加字母B
八进制为 0O
十六进制为 0X
2、浮点类型（float）
如：1.0 0.0 1.（也是1.0）
科学计数法：使用e表示10的指数，如e2 = 10的二次方
3、复数类型（complex）
 a+bi （i0=1 i1=i i2=i2 i3=-i）计算机中用j表示i
4、布尔类型（bool）
只有两个值 True 和 False
！没有 0和1 两个值 ，但是0和1可以转换为 T or F
如：bool（0） 输出：False
bool（2 or 1）输出：True
有值转换为T（包括空格），空值转换为F（包括空列表，空字典）
5、数据类型转换（浮点优先级大于整数大于布尔）
  5.1、隐式类型转换
          如：a = 1+True 输出a：2
          1.0+1 输出：2.0
  5.2、显式类型转换
          包括但不限于int()  float()  bool()

十、序列
序列（sequence）是一种可迭代，元素有序的容器类型的数据
1、索引（正向：0123……  反向-1-2-3……）
通过索引访问序列a元素：如： a[0] 就是取序列的第一个值

十一、if结构
1、if
写法：
if 条件:
  语句组
2、if-else
写法：
if 条件:
  语句组1
else:
  语句组2
3、if-elif-else（满足一条直接结束，应该？）
写法：
if 条件1:
  语句组1
elif 条件2:
  语句组2
……
elif 条件n:
  语句组n
else:
  语句组n+1

十二、列表
可变序列，可追加，插入，删除，替换列表中的元素
1、创建列表
两种方法：
list('Hello') = ['H','e','l','l','o']
[20,10,50,40]
若只有一对空的中括号，就是创建一个空列表
2、追加元素
追加单个元素可以使用  append(x)
追加多个元素可以使用 + 运算 或者列表中的extend(t) 
例子：
list=[20,10]
t = [1,2,3]
list+=t  或 list.extend(t)
输出[20,10,1,2,3]
3、插入元素
例子:
list=[20,10,30]
list.insert(1,80)
输出[20,10,80,30]
4、替换元素
list=[20,10,30]
list[1] = 90
输出[20,90,30]
5、删除元素
list=[20,10,30]
list.remove(10)
输出[20,30]

十三、元组（tuple）
元组是一种不可变的序列类型
1、创建元组
tuple([21,32,43,45]) 或 (21,32,43,45) 第二种小括号可省略
a = ()可以创建一个空元组
2、元组拆包
s_id,s_name = (102,'张三')

十四、字符串
1、普通字符串：
使用单或双引号括起来的内容
若想在字符串中使用特殊字符，需要在前面加上反斜杠\
如： \t 水平制表符  \n换行  \r回车  \"双引号  \'单引号  \\反斜杠
2、原始字符串
在字符串前面加上r 原始字符串可以呈现字符串最原本的样子（可用于表示文件路径）
r'Hello\n world'
3、长字符串
使用三个引号括起来''' XXX '''
长字符串的内容可保留原有的格式（回车空格啥的）
4、字符串和数字互相转换
其实还是int()和float()
转换成功则返回数字，失败引发异常
int('AB',16)代表以16进制转换AB
反过来str()函数（可以将大部分数据转换为字符串）
5、格式化字符串
format()函数
占位符：将一个表达式的计算结果插入字符串中
例如：'i * i = {}'.format(i*i)
也可以使用序号如 s='{0}*{0}={1}'.format(i,i*i)
参数名：'{p1}*{p1}={p2}'.format(p1=i,p2=i*i)
格式化控制符
{1（参数序号）:d（格式控制符)}
s 字符串
d 十进制整数
f、F十进制浮点数 0.2f（保留小数点两位）
g、G十进制整数或浮点数
e、E科学计算法表示浮点数
o 八进制整数
x、X十六进制整数
6、操作字符串
字符串查找
str.find(sub[,start[,end]]
如果有，则返回最左端位置的索引，没有返回-1
字符串替换
str.replace(old,new[,count])
count表示替换几个
字符串分割
str.split(sep=None,maxsplit=-1)
maxspllit表示分割几次（分割：在sep处输入的字符处使用逗号隔开）

十五、类与对象
1、面向对象
这是一种编程思想，按照真实世界的思维方式构建软件系统
2、定义类
object是一切类的根类，一般可写进父类中（可省略）
语法：
class 类名 [(父类)]:
 类体
  pass #相当于是类的占位符，在类没有具体内容时可以使用pass不让程序出错。
3、创建对象
car = Car() #此时就创建了一个名为car的对象，被分类为Car
4、类的成员
成员变量：实际变量、类变量
构造方法
成员方法：实际方法、类方法
属性（property)
5、实例变量
示例：具体参考pylesson6/classandobject.py
6、构造方法
构造方法的使用方法同样可参考pylesson6/classandobject.py
构造方法本事并不能开辟内存空间
创建对象一共可以分为两个过程
第一个过程是开辟内存空间（用于存放对象）
第二个过程是通过构造方法初始化一个对象
7、实例方法
构造方法就是一种特殊的实例方法（调用时必须通过类名加小括号来调用）
所有的实例方法第一个参数一定是self 表示当前这个类的个体
在给实例方法传递参数时，是从第二个参数开始接收的。
8、类变量
属于类的变量，不属于单个对象，放在构造方法之外
例如:
class Account
  interest_rate = 0
此时interest_rate就是类Account的变量
在调用时需要通过 类名.变量名（Account.interest_rate 来调用
9、类方法
首先 classmethod 是一个装饰器，用于放在函数前改变函数性质
例如：（必须在类中）
classmethod
def interest_by(cls,amt):
  return cls.interest_rate * amt
类方法的第一个参数cls表示当前这个类
在传递参数是同样从第二个参数开始传递
调用类方法时也是通过类进行调用，参考上方类变量
9、封装性
隐藏对象内部细节，仅保留有限的对外接口，让访问更简单
  9.1、私有变量：在变量前加上两个下划线__
    在类内部可通过self.私有变量名 进行访问，但在外部无法进行访问（实例变量是可以在外部通过类名.变量名进行访问的）
    9.2、私有方法：在定义方法前加上双下划线，其他大同小异(几乎可以理解为是一样的)
10、使用属性
定义age属性的get（）方法，修饰器使用@property进行修饰，方法名即为属性名age
修改age属性时需要在前面加上 @属性名.setter 方法
部分实例参考pylesson6/classandobject.py
在外部访问时可使用 .format(dog.age) 调用值
dog.age = 3 #修改变量值









EXTRA：
实在不好多开前面的分类了（因为只有一小节）
1、加和乘操作
a = 'Hello'
a*2 输出'HelloHello'
a = a +',' 输出'HelloHello，'
2、切片操作
[start:end:step] 
注意：不包含end，step为步长（一次跳过几个取值）
start，end均可省略或使用负值
例：a:'Hello'
a[1:3] 输出：'el'
a[0:3:2] 输出：'Hl'(第一个l）
3、成员测试
一共两个运算符 in 和 not in 用于测试是否包含某一个元素
如： a='Hello'
'e' in a
输出True
'E' not in a
输出False